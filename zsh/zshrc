# ZSH init script.
# Dependencies:
# - oh-my-zsh (see configuration of $ZSH variable)
#   git clone git://github.com/robbyrussell/oh-my-zsh.git
# - zsh-syntax-highlighting ($ZSH_SYNTAX)
#   git clone git://github.com/zsh-users/zsh-syntax-highlighting.git

# load oh my zsh

# MacPorts Installer addition on 2011-09-03_at_17:19:17: adding an appropriate PATH variable for use with MacPorts.
PATH=/opt/local/libexec/gnubin/:$PATH
PATH=/opt/local/bin:/opt/local/sbin:$PATH
PATH=/opt/local/lib/postgresql90/bin/:$PATH
PATH=$HOME/bin:$PATH
export PATH
# Finished adapting your PATH environment variable for use with MacPorts.

# for sanity, use case sensitive tab-completion
CASE_SENSITIVE="true"

ZSH_CONTRIB=~/.zsh-contrib

ZSH=$ZSH_CONTRIB/oh-my-zsh
plugins=(git svn osx)
DISABLE_AUTO_UPDATE="true" source $ZSH/oh-my-zsh.sh

# some variables for later use
local SYSTEM=$(uname -s)
export LANG=en_US

# The following lines were added by compinstall
zstyle ':completion:*' completer _expand _complete _ignored
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt '%SAt %p: Hit TAB for more, or the character to insert%s'
zstyle ':completion:*' menu select=0
zstyle ':completion:*' select-prompt '%SScrolling active: current selection at %p%s'
zstyle :compinstall filename '/Users/john/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall

# disable some annoyances from zsh
unsetopt share_history
unsetopt correct_all
unsetopt autopushd
unsetopt autocd

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=100000
SAVEHIST=10000
bindkey -e
setopt HIST_IGNORE_DUPS
setopt HIST_EXPIRE_DUPS_FIRST

# End of lines configured by zsh-newuser-install

alias ls='ls --color'
alias l='ls -l'
alias lA='ls -lA'
alias lS='ls -lS'
alias lt='ls -lt'
alias grep='grep --color'
alias irgrep='grep -irn --exclude-dir=.svn --exclude-dir=.git'
alias psgrep='ps aux | grep -i '

alias diff='colordiff'
# support colored less
alias less='less -R'

if [[ $SYSTEM = 'Darwin' ]] ; then
    alias xargs='gxargs'
    alias find='gfind'
    alias kill='gkill'
    alias nlp='lsof -Pnl +M -i4'

else
    alias nlp='netstat -lnp'
fi

if [[ $HOST = 'hesse' ]] ; then
    alias zssh='ssh -i ~/.ssh/zkeys/id_rsa'
    alias zscp='scp -i ~/.ssh/zkeys/id_rsa'
    alias python='python2.7'
    alias zmvn='mvn -s ~/.m2/zsettings.xml'
fi

alias makepasswd='makepasswd --minchars=12 --maxchars=20 --count=6'
alias ccat='pygmentize -g'
########################################################################################

autoload colors
colors

case $HOST in
    hesse)
        HOSTCOLOR=061
        ;;
    dresden)
        HOSTCOLOR=red
        ;;
    bataille)
        HOSTCOLOR=yellow
        ;;
    saramago)
        HOSTCOLOR=blue
        ;;
    zlws-jj[0-9])
        HOSTCOLOR=magenta
        ;;
    outpost.h7r)
        HOSTCOLOR=096
        ;;
    *)
        HOSTCOLOR=gray
        ;;

esac

ZSH_SYNTAX=$ZSH_CONTRIB/zsh-syntax-highlighting

# oh-my-zsh stuff
bindkey ";5C" forward-word
bindkey ";5D" backward-word

###############################################################################
# prompt config
#
ZSH_THEME_GIT_PROMPT_PREFIX="%{$reset_color%}%{$fg[white]%}["
ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%}%{$fg[white]%}]%{$reset_color%}"
ZSH_THEME_GIT_PROMPT_DIRTY="%{$fg[red]%}●%{$reset_color%}"
ZSH_THEME_GIT_PROMPT_CLEAN=""

ZSH_THEME_SVN_PROMPT_PREFIX="svn:("
ZSH_THEME_SVN_PROMPT_SUFFIX=")"
ZSH_THEME_SVN_PROMPT_DIRTY="%{$fg[red]%} ✘ %{$reset_color%}"
ZSH_THEME_SVN_PROMPT_CLEAN=" "

usercolor=$HOSTCOLOR
highlight=0

if [[ $EUID -eq 0 ]] ; then
    usercolor=red
    highlight=1
fi
setopt promptSubst

function precmd () {
    PS_USER_PART="%{%F{$usercolor}%}%n%{$reset_color%}"
    if [[ $highlight -eq 1 ]] ; then
        PS_USER_PART="%U$PS_USER_PART"
    fi

    REPO_CUSTOM_STATUS=

    if [[ $(in_svn) -eq 1 ]]  ; then
        REPO_CUSTOM_STATUS="[$(svn_get_repo_name):$(svn_get_rev_nr)$(svn_dirty)] "
    else
        local cb=$(current_branch)
        if [ -n "$cb" ]; then
            REPO_CUSTOM_STATUS="$ZSH_THEME_GIT_PROMPT_PREFIX$(current_branch)$(parse_git_dirty)$ZSH_THEME_GIT_PROMPT_SUFFIX "
        fi
    fi

    PROMPT="$PS_USER_PART@%{%F{$HOSTCOLOR}%}%m%{$reset_color%}:%j:%3d/ $REPO_CUSTOM_STATUS%T%# "
    export PROMPT
}
RPROMPT="%(?..%{$bg[red]$fg_bold[white]%}%?%{$reset_color%} )"
###############################################################################

export SVN_EDITOR=vim
export EDITOR=vim

source $ZSH_SYNTAX/zsh-syntax-highlighting.zsh

cl () { cd $1 && ls }

# mark all stderr as red
#exec 2>>( while read X; do print "\e[91m${X}\e[0m" > /dev/tty; done & )

# zsh has a built in which command. WTF?!
# Really: WHY? Until I find a clean solution, this helps.
alias which=/usr/bin/which

# locates class among jars
# usage: Fjar CLASSNAME PATH
function Fjar {
    for i in `find $2 -type f -iname '*jar'` ; do
        echo $i ;
        jar -tf $i | grep $1 ;
    done
}

function TailGrep () {
    tail -f $2 | grep $1
}
alias tgrep=TailGrep
alias mon_fs="watch 'iostat ; df -h'"
alias json_format='python -mjson.tool'

function FindInFiles () {
    irgrep $1 $2 | sed -e 's/:/ /' | awk '{print $1}' | sort -u
}
alias fif=FindInFiles

# diff for git
function mgdiff () {
    git diff $1 | mvim -
}

# When using screen, inform the current status of this terminal

case "$TERM" in
  (screen)
    #function precmd() { print -Pn "\033]0;S $TTY:t{%100<...<%~%<<}\007" }
  ;;
  (xterm)
    directory_prompt=""
  ;;
  (*)
    directory_prompt="%{$fg[$directory_color]%}%~%{$reset_color%} "
  ;;
esac

if [[ -e ~/.zshrc.local ]] ; then
    source ~/.zshrc.local
fi

#development aliases and stuff
alias mvn-ee='mvn eclipse:eclipse -DdownloadSources=true'
alias mvn-dep='mvn dependency:tree'
